import{_ as s,o,c as a,b as n}from"./chunks/framework.df2f533d.js";const y=JSON.parse('{"title":"Installation","description":"","frontmatter":{},"headers":[],"relativePath":"installation.md","filePath":"installation.md"}'),e={name:"installation.md"},t=n(`<h1 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-label="Permalink to &quot;Installation&quot;">​</a></h1><nav class="table-of-contents"><ul><li><a href="#requirements">Requirements</a></li><li><a href="#browser-support">Browser Support</a></li><li><a href="#installing-nova-via-composer">Installing Nova Via Composer</a></li><li><a href="#registering-a-nova-license-key-and-production-url">Registering a Nova License Key and Production URL</a><ul><li><a href="#verifying-your-nova-license-key-configuration">Verifying Your Nova License Key Configuration</a></li></ul></li><li><a href="#authenticating-nova-in-ci-environments">Authenticating Nova In CI Environments</a></li><li><a href="#using-nova-on-development-staging-domains">Using Nova on Development &amp; Staging Domains</a></li><li><a href="#authorizing-access-to-nova">Authorizing Access To Nova</a></li><li><a href="#customization">Customization</a><ul><li><a href="#branding">Branding</a></li><li><a href="#customizing-nova-s-footer">Customizing Nova&#39;s Footer</a></li><li><a href="#customizing-nova-s-authentication-guard">Customizing Nova&#39;s Authentication Guard</a></li><li><a href="#customizing-nova-s-password-reset-functionality">Customizing Nova&#39;s Password Reset Functionality</a></li><li><a href="#customizing-nova-s-storage-disk-driver">Customizing Nova&#39;s Storage Disk Driver</a></li><li><a href="#customizing-nova-s-initial-path">Customizing Nova&#39;s Initial Path</a></li><li><a href="#enabling-breadcrumbs">Enabling Breadcrumbs</a></li><li><a href="#enabling-rtl-support">Enabling RTL Support</a></li><li><a href="#disabling-nova-s-theme-switcher">Disabling Nova&#39;s Theme Switcher</a></li></ul></li><li><a href="#error-reporting">Error Reporting</a></li><li><a href="#updating-nova">Updating Nova</a><ul><li><a href="#updating-nova-s-assets">Updating Nova&#39;s Assets</a></li><li><a href="#keeping-nova-s-assets-updated">Keeping Nova&#39;s Assets Updated</a></li></ul></li><li><a href="#code-distribution">Code Distribution</a></li></ul></nav><h2 id="requirements" tabindex="-1">Requirements <a class="header-anchor" href="#requirements" aria-label="Permalink to &quot;Requirements&quot;">​</a></h2><p>Laravel Nova has a few requirements you should be aware of before installing:</p><ul><li>Composer</li><li>Laravel Framework 8.0+</li><li>Laravel Mix 6</li><li>Node.js (Version 14)</li><li>NPM</li></ul><h2 id="browser-support" tabindex="-1">Browser Support <a class="header-anchor" href="#browser-support" aria-label="Permalink to &quot;Browser Support&quot;">​</a></h2><p>Nova supports modern versions of the following browsers:</p><ul><li>Apple Safari</li><li>Google Chrome</li><li>Microsoft Edge</li><li>Mozilla Firefox</li></ul><h2 id="installing-nova-via-composer" tabindex="-1">Installing Nova Via Composer <a class="header-anchor" href="#installing-nova-via-composer" aria-label="Permalink to &quot;Installing Nova Via Composer&quot;">​</a></h2><div class="warning custom-block"><p class="custom-block-title">Zip Downloads</p><p>Previous releases of Laravel Nova allowed Nova to be installed by downloading Zip archives of the source code; however, Nova 4 installation is always performed via Composer.</p></div><p>You may install Nova as a Composer package via our private Satis repository. To get started, add the Nova repository to your application&#39;s <code>composer.json</code> file:</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-string-expression);">&quot;repositories&quot;</span><span style="color:var(--shiki-color-text);">: [</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">&quot;type&quot;</span><span style="color:var(--shiki-token-punctuation);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;composer&quot;</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">&quot;url&quot;</span><span style="color:var(--shiki-token-punctuation);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;https://nova.laravel.com&quot;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">],</span></span></code></pre></div><p>Or, you may use the following CLI command to add the Composer repository to your <code>composer.json</code> file:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-function);">composer</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string);">config</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string);">repositories.nova</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&#39;{&quot;type&quot;: &quot;composer&quot;, &quot;url&quot;: &quot;https://nova.laravel.com&quot;}&#39;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string);">--file</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string);">composer.json</span></span></code></pre></div><p>Next, you may add <code>laravel/nova</code> to your list of required packages in your <code>composer.json</code> file:</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-string-expression);">&quot;require&quot;</span><span style="color:var(--shiki-color-text);">: {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">&quot;php&quot;</span><span style="color:var(--shiki-token-punctuation);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;^8.0&quot;</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">&quot;laravel/framework&quot;</span><span style="color:var(--shiki-token-punctuation);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;^9.0&quot;</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">&quot;laravel/nova&quot;</span><span style="color:var(--shiki-token-punctuation);">:</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;~4.0&quot;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">},</span></span></code></pre></div><p>After your <code>composer.json</code> file has been updated, run the <code>composer update</code> command in your console terminal:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-function);">composer</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string);">update</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string);">--prefer-dist</span></span></code></pre></div><p>When running <code>composer update</code>, you will be prompted to provide a username and password. You should use your Nova website email for the username and a <a href="https://nova.laravel.com/licenses" target="_blank" rel="noreferrer">license key</a> should be used as the password. These credentials will authenticate your Composer session as having permission to download the Nova source code.</p><p>To avoid manually typing these credentials, you may create a <a href="https://getcomposer.org/doc/articles/http-basic-authentication.md" target="_blank" rel="noreferrer">Composer auth.json file</a> while using your <a href="https://nova.laravel.com/licenses" target="_blank" rel="noreferrer">license key</a> in place of your password:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-function);">composer</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string);">config</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string);">http-basic.nova.laravel.com</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string);">your-nova-account-email@your-domain.com</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string);">your-license-key</span></span></code></pre></div><p>Finally, run the <code>nova:install</code> and <code>migrate</code> Artisan commands. The <code>nova:install</code> command will install Nova&#39;s service provider and public assets within your application:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-function);">php</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string);">artisan</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string);">nova:install</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-function);">php</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string);">artisan</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string);">migrate</span></span></code></pre></div><p>After running this command, verify that the <code>App\\Providers\\NovaServiceProvider</code> was added to the <code>providers</code> array in your <code>app</code> configuration file. If it wasn&#39;t, you should add it manually. Of course, if your application does not use the <code>App</code> namespace, you should update the provider class name as needed.</p><p>The default <code>App\\Nova\\User</code> Nova resource references the <code>App\\Models\\User</code> model. If you place your models in a different directory or namespace, you should adjust this value within the resource:</p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">static</span><span style="color:var(--shiki-color-text);"> $model </span><span style="color:var(--shiki-token-keyword);">=</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&#39;App\\\\Models\\\\User&#39;</span><span style="color:var(--shiki-color-text);">;</span></span></code></pre></div><p>If you don&#39;t have a Nova admin user yet in your <code>users</code> table, you can add one by running the <code>nova:user</code> Artisan command and following the prompts:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-function);">php</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string);">artisan</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string);">nova:user</span></span></code></pre></div><p>That&#39;s it! Next, you may navigate to your application&#39;s <code>/nova</code> path in your browser and you should be greeted with the Nova dashboard which includes links to various parts of this documentation.</p><h2 id="registering-a-nova-license-key-and-production-url" tabindex="-1">Registering a Nova License Key and Production URL <a class="header-anchor" href="#registering-a-nova-license-key-and-production-url" aria-label="Permalink to &quot;Registering a Nova License Key and Production URL&quot;">​</a></h2><p>Nova requires a license key and a production URL to be used in production environments. Nova will check your license key and the current host against the values from the license details found in your Nova account.</p><p>You can generate license keys and register the production URL for your project inside the license&#39;s page on your Nova account at <a href="https://nova.laravel.com/licenses" target="_blank" rel="noreferrer">https://nova.laravel.com/licenses</a>:</p><div class="tip custom-block"><p class="custom-block-title">Wildcard subdomains</p><p>You can register a wildcard subdomain for your production URL for use in multi-tenant scenarios (e.g. <code>*.laravel.com</code>).</p></div><p>You can register your license key by setting the <code>license_key</code> option in your <code>config/nova.php</code> configuration file:</p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-string-expression);">&#39;license_key&#39;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=&gt;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">env</span><span style="color:var(--shiki-token-punctuation);">(</span><span style="color:var(--shiki-token-string-expression);">&#39;NOVA_LICENSE_KEY&#39;</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-function);"> </span><span style="color:var(--shiki-token-string-expression);">&#39;&#39;</span><span style="color:var(--shiki-token-punctuation);">),</span></span></code></pre></div><h3 id="verifying-your-nova-license-key-configuration" tabindex="-1">Verifying Your Nova License Key Configuration <a class="header-anchor" href="#verifying-your-nova-license-key-configuration" aria-label="Permalink to &quot;Verifying Your Nova License Key Configuration&quot;">​</a></h3><p>To verify everything has been configured correctly, you should run the <code>nova:check-license</code> command:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-function);">php</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string);">artisan</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string);">nova:check-license</span></span></code></pre></div><h2 id="authenticating-nova-in-ci-environments" tabindex="-1">Authenticating Nova In CI Environments <a class="header-anchor" href="#authenticating-nova-in-ci-environments" aria-label="Permalink to &quot;Authenticating Nova In CI Environments&quot;">​</a></h2><p>It&#39;s not recommended to store your Composer <code>auth.json</code> file inside your project&#39;s source control repository. However, there may be times you wish to download Nova inside a CI environment like <a href="https://codeship.com/" target="_blank" rel="noreferrer">CodeShip</a>. For instance, you may wish to run tests for any custom tools you create.</p><p>To authenticate Nova in these situations, you can use Composer&#39;s <code>config</code> command to set the configuration option inside your CI system&#39;s pipeline, injecting environment variables containing your Nova username and license key:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-function);">composer</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string);">config</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string);">http-basic.nova.laravel.com</span><span style="color:var(--shiki-color-text);"> \${NOVA_USERNAME} \${NOVA_LICENSE_KEY}</span></span></code></pre></div><h2 id="using-nova-on-development-staging-domains" tabindex="-1">Using Nova on Development &amp; Staging Domains <a class="header-anchor" href="#using-nova-on-development-staging-domains" aria-label="Permalink to &quot;Using Nova on Development &amp; Staging Domains&quot;">​</a></h2><p>Since Nova can be used in local and staging development environments, Nova will not check your license key when used on <code>localhost</code> or local TLDs like those specified in <a href="https://datatracker.ietf.org/doc/html/rfc2606#page-2" target="_blank" rel="noreferrer">IETF RFC 2606</a>:</p><ul><li><code>.test</code></li><li><code>.example</code></li><li><code>.invalid</code></li><li><code>.localhost</code></li><li><code>.local</code></li></ul><p>Nova will also not check the current license key when the hostname contains commonly-used staging subdomains:</p><ul><li><code>staging.</code></li><li><code>stage.</code></li><li><code>test.</code></li><li><code>testing.</code></li><li><code>dev.</code></li><li><code>development.</code></li></ul><h2 id="authorizing-access-to-nova" tabindex="-1">Authorizing Access To Nova <a class="header-anchor" href="#authorizing-access-to-nova" aria-label="Permalink to &quot;Authorizing Access To Nova&quot;">​</a></h2><p>Within your <code>app/Providers/NovaServiceProvider.php</code> file, there is a <code>gate</code> method. This authorization gate controls access to Nova in <strong>non-local</strong> environments. By default, any user can access the Nova dashboard when the current application environment is <code>local</code>. You are free to modify this gate as needed to restrict access to your Nova installation:</p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-comment);">/**</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);"> * Register the Nova gate.</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);"> *</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);"> * This gate determines who can access Nova in non-local environments.</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);"> *</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);"> * </span><span style="color:var(--shiki-token-keyword);">@return</span><span style="color:var(--shiki-token-comment);"> </span><span style="color:var(--shiki-token-keyword);">void</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);"> */</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">protected</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">function</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">gate</span><span style="color:var(--shiki-color-text);">()</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">{</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-constant);">Gate</span><span style="color:var(--shiki-token-keyword);">::</span><span style="color:var(--shiki-token-function);">define</span><span style="color:var(--shiki-token-punctuation);">(</span><span style="color:var(--shiki-token-string-expression);">&#39;viewNova&#39;</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">function</span><span style="color:var(--shiki-color-text);"> ($user) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">in_array</span><span style="color:var(--shiki-token-punctuation);">(</span><span style="color:var(--shiki-token-function);">$user</span><span style="color:var(--shiki-token-keyword);">-&gt;</span><span style="color:var(--shiki-token-function);">email</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-function);"> [</span></span>
<span class="line"><span style="color:var(--shiki-token-function);">            </span><span style="color:var(--shiki-token-string-expression);">&#39;taylor@laravel.com&#39;</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-token-function);">        ]</span><span style="color:var(--shiki-token-punctuation);">)</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span><span style="color:var(--shiki-token-punctuation);">)</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">}</span></span></code></pre></div><h2 id="customization" tabindex="-1">Customization <a class="header-anchor" href="#customization" aria-label="Permalink to &quot;Customization&quot;">​</a></h2><h3 id="branding" tabindex="-1">Branding <a class="header-anchor" href="#branding" aria-label="Permalink to &quot;Branding&quot;">​</a></h3><p>Although Nova&#39;s interface is intended to be an isolated part of your application that is managed by Nova, you can make some small customizations to the branding logo and color used by Nova to make the interface more cohesive with the rest of your application.</p><h4 id="brand-logo" tabindex="-1">Brand Logo <a class="header-anchor" href="#brand-logo" aria-label="Permalink to &quot;Brand Logo&quot;">​</a></h4><p>To customize the logo used at the top left of the Nova interface, you may specify a configuration value for the <code>brand.logo</code> configuration item within your application&#39;s <code>config/nova.php</code> configuration file. This configuration value should contain an absolute path to the SVG file of the logo you would like to use:</p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-string-expression);">&#39;brand&#39;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=&gt;</span><span style="color:var(--shiki-color-text);"> [</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-string-expression);">&#39;logo&#39;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=&gt;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">resource_path</span><span style="color:var(--shiki-token-punctuation);">(</span><span style="color:var(--shiki-token-string-expression);">&#39;/img/example-logo.svg&#39;</span><span style="color:var(--shiki-token-punctuation);">),</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-comment);">// ...</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">]</span><span style="color:var(--shiki-token-punctuation);">,</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">SVG Sizing</p><p>You may need to adjust the size and width of your SVG logo by modifying its width in the SVG file itself.</p></div><h4 id="brand-color" tabindex="-1">Brand Color <a class="header-anchor" href="#brand-color" aria-label="Permalink to &quot;Brand Color&quot;">​</a></h4><p>To customize the color used as the &quot;primary&quot; color within the Nova interface, you may specify a value for the <code>brand.colors</code> configuration item within your application&#39;s <code>config/nova.php</code> configuration file. This color will be used as the primary button color as well as the color of various emphasized items throughout the Nova interface. This configuration value should be a valid RGB, RGBA, or HSL string value:</p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-string-expression);">&#39;brand&#39;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=&gt;</span><span style="color:var(--shiki-color-text);"> [</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-comment);">// ...</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-string-expression);">&#39;colors&#39;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=&gt;</span><span style="color:var(--shiki-color-text);"> [</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-string-expression);">&quot;400&quot;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=&gt;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;24, 182, 155, 0.5&quot;</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-string-expression);">&quot;500&quot;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=&gt;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;24, 182, 155&quot;</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-string-expression);">&quot;600&quot;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=&gt;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string-expression);">&quot;24, 182, 155, 0.75&quot;</span><span style="color:var(--shiki-token-punctuation);">,</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    ]</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">]</span><span style="color:var(--shiki-token-punctuation);">,</span></span></code></pre></div><h3 id="customizing-nova-s-footer" tabindex="-1">Customizing Nova&#39;s Footer <a class="header-anchor" href="#customizing-nova-s-footer" aria-label="Permalink to &quot;Customizing Nova&#39;s Footer&quot;">​</a></h3><p>There are times you may wish to customize Nova&#39;s default footer text to include relevant information for your users, such as your application version, IP addresses, or other information. Using the <code>Nova::footer</code> method, you may customize the footer text of your Nova installation. Typically, the <code>footer</code> method should be called within the <code>boot</code> method of your application&#39;s <code>App\\Providers\\NovaServiceProvider</code> class:</p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-keyword);">use</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">Laravel</span><span style="color:var(--shiki-token-punctuation);">\\</span><span style="color:var(--shiki-token-constant);">Nova</span><span style="color:var(--shiki-token-punctuation);">\\</span><span style="color:var(--shiki-token-constant);">Nova</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">use</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">Illuminate</span><span style="color:var(--shiki-token-punctuation);">\\</span><span style="color:var(--shiki-token-constant);">Support</span><span style="color:var(--shiki-token-punctuation);">\\</span><span style="color:var(--shiki-token-constant);">Facades</span><span style="color:var(--shiki-token-punctuation);">\\</span><span style="color:var(--shiki-token-constant);">Blade</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-comment);">/**</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);"> * Boot any application services.</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);"> *</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);"> * </span><span style="color:var(--shiki-token-keyword);">@return</span><span style="color:var(--shiki-token-comment);"> </span><span style="color:var(--shiki-token-keyword);">void</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);"> */</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">function</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">boot</span><span style="color:var(--shiki-color-text);">()</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">{</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">parent::</span><span style="color:var(--shiki-token-function);">boot</span><span style="color:var(--shiki-token-punctuation);">()</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-constant);">Nova</span><span style="color:var(--shiki-token-keyword);">::</span><span style="color:var(--shiki-token-function);">footer</span><span style="color:var(--shiki-token-punctuation);">(</span><span style="color:var(--shiki-token-keyword);">function</span><span style="color:var(--shiki-color-text);"> ($request) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">Blade</span><span style="color:var(--shiki-token-keyword);">::</span><span style="color:var(--shiki-token-function);">render</span><span style="color:var(--shiki-token-punctuation);">(</span><span style="color:var(--shiki-token-string-expression);">&#39;</span></span>
<span class="line"><span style="color:var(--shiki-token-string-expression);">            @env(\\&#39;prod\\&#39;)</span></span>
<span class="line"><span style="color:var(--shiki-token-string-expression);">                This is production!</span></span>
<span class="line"><span style="color:var(--shiki-token-string-expression);">            @endenv</span></span>
<span class="line"><span style="color:var(--shiki-token-string-expression);">        &#39;</span><span style="color:var(--shiki-token-punctuation);">)</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span><span style="color:var(--shiki-token-punctuation);">)</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">}</span></span></code></pre></div><h3 id="customizing-nova-s-authentication-guard" tabindex="-1">Customizing Nova&#39;s Authentication Guard <a class="header-anchor" href="#customizing-nova-s-authentication-guard" aria-label="Permalink to &quot;Customizing Nova&#39;s Authentication Guard&quot;">​</a></h3><p>Nova uses the default authentication guard defined in your <code>auth</code> configuration file. If you would like to customize this guard, you may set the <code>guard</code> value within Nova&#39;s configuration file:</p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-string-expression);">&#39;guard&#39;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=&gt;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">env</span><span style="color:var(--shiki-token-punctuation);">(</span><span style="color:var(--shiki-token-string-expression);">&#39;NOVA_GUARD&#39;</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-function);"> </span><span style="color:var(--shiki-token-constant);">null</span><span style="color:var(--shiki-token-punctuation);">),</span></span></code></pre></div><h3 id="customizing-nova-s-password-reset-functionality" tabindex="-1">Customizing Nova&#39;s Password Reset Functionality <a class="header-anchor" href="#customizing-nova-s-password-reset-functionality" aria-label="Permalink to &quot;Customizing Nova&#39;s Password Reset Functionality&quot;">​</a></h3><p>Nova uses the default password reset broker defined in your <code>auth</code> configuration file. If you would like to customize this broker, you may set the <code>passwords</code> value within Nova&#39;s configuration file:</p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-string-expression);">&#39;passwords&#39;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=&gt;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">env</span><span style="color:var(--shiki-token-punctuation);">(</span><span style="color:var(--shiki-token-string-expression);">&#39;NOVA_PASSWORDS&#39;</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-function);"> </span><span style="color:var(--shiki-token-constant);">null</span><span style="color:var(--shiki-token-punctuation);">),</span></span></code></pre></div><h3 id="customizing-nova-s-storage-disk-driver" tabindex="-1">Customizing Nova&#39;s Storage Disk Driver <a class="header-anchor" href="#customizing-nova-s-storage-disk-driver" aria-label="Permalink to &quot;Customizing Nova&#39;s Storage Disk Driver&quot;">​</a></h3><p>Nova uses the default storage disk driver defined in your <code>filesystems</code> configuration file. If you would like to customize this disk, you may set the <code>storage_disk</code> value within Nova&#39;s configuration file:</p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-string-expression);">&#39;storage_disk&#39;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">=&gt;</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">env</span><span style="color:var(--shiki-token-punctuation);">(</span><span style="color:var(--shiki-token-string-expression);">&#39;NOVA_STORAGE_DISK&#39;</span><span style="color:var(--shiki-token-punctuation);">,</span><span style="color:var(--shiki-token-function);"> </span><span style="color:var(--shiki-token-string-expression);">&#39;public&#39;</span><span style="color:var(--shiki-token-punctuation);">),</span></span></code></pre></div><h3 id="customizing-nova-s-initial-path" tabindex="-1">Customizing Nova&#39;s Initial Path <a class="header-anchor" href="#customizing-nova-s-initial-path" aria-label="Permalink to &quot;Customizing Nova&#39;s Initial Path&quot;">​</a></h3><p>When visiting Nova, the <code>Main</code> dashboard is typically loaded by default. However, you are free to define a different initial path that should be loaded using Nova&#39;s <code>initialPath</code> method. Typically, this method may be invoked from the <code>register</code> method of your application&#39;s <code>App\\Providers\\NovaServiceProvider</code> service provider:</p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-keyword);">use</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">Laravel</span><span style="color:var(--shiki-token-punctuation);">\\</span><span style="color:var(--shiki-token-constant);">Nova</span><span style="color:var(--shiki-token-punctuation);">\\</span><span style="color:var(--shiki-token-constant);">Nova</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-comment);">/**</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);"> * Register any application services.</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);"> *</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);"> * </span><span style="color:var(--shiki-token-keyword);">@return</span><span style="color:var(--shiki-token-comment);"> </span><span style="color:var(--shiki-token-keyword);">void</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);"> */</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">function</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">register</span><span style="color:var(--shiki-color-text);">()</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">{</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-constant);">Nova</span><span style="color:var(--shiki-token-keyword);">::</span><span style="color:var(--shiki-token-function);">initialPath</span><span style="color:var(--shiki-token-punctuation);">(</span><span style="color:var(--shiki-token-string-expression);">&#39;/resources/users&#39;</span><span style="color:var(--shiki-token-punctuation);">)</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-comment);">// ...</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">}</span></span></code></pre></div><h3 id="enabling-breadcrumbs" tabindex="-1">Enabling Breadcrumbs <a class="header-anchor" href="#enabling-breadcrumbs" aria-label="Permalink to &quot;Enabling Breadcrumbs&quot;">​</a></h3><p>If you would like Nova to display a &quot;breadcrumb&quot; menu as you navigate your Nova dashboard, you may invoke the <code>Nova::withBreadcrumbs</code> method. This method should be invoked from within the <code>boot</code> method of you application&#39;s <code>App\\Providers\\NovaServiceProvider</code> class:</p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-keyword);">use</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">Laravel</span><span style="color:var(--shiki-token-punctuation);">\\</span><span style="color:var(--shiki-token-constant);">Nova</span><span style="color:var(--shiki-token-punctuation);">\\</span><span style="color:var(--shiki-token-constant);">Nova</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-comment);">/**</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);"> * Boot any application services.</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);"> *</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);"> * </span><span style="color:var(--shiki-token-keyword);">@return</span><span style="color:var(--shiki-token-comment);"> </span><span style="color:var(--shiki-token-keyword);">void</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);"> */</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">function</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">boot</span><span style="color:var(--shiki-color-text);">()</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">{</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">parent::</span><span style="color:var(--shiki-token-function);">boot</span><span style="color:var(--shiki-token-punctuation);">()</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-constant);">Nova</span><span style="color:var(--shiki-token-keyword);">::</span><span style="color:var(--shiki-token-function);">withBreadcrumbs</span><span style="color:var(--shiki-token-punctuation);">()</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">}</span></span></code></pre></div><p>The <code>withBreadcrumbs</code> method also accepts a closure that allows you to enable breadcrumbs for specific users or other custom scenarios:</p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-keyword);">use</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">Laravel</span><span style="color:var(--shiki-token-punctuation);">\\</span><span style="color:var(--shiki-token-constant);">Nova</span><span style="color:var(--shiki-token-punctuation);">\\</span><span style="color:var(--shiki-token-constant);">Http</span><span style="color:var(--shiki-token-punctuation);">\\</span><span style="color:var(--shiki-token-constant);">Requests</span><span style="color:var(--shiki-token-punctuation);">\\</span><span style="color:var(--shiki-token-constant);">NovaRequest</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">use</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">Laravel</span><span style="color:var(--shiki-token-punctuation);">\\</span><span style="color:var(--shiki-token-constant);">Nova</span><span style="color:var(--shiki-token-punctuation);">\\</span><span style="color:var(--shiki-token-constant);">Nova</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-constant);">Nova</span><span style="color:var(--shiki-token-keyword);">::</span><span style="color:var(--shiki-token-function);">withBreadcrumbs</span><span style="color:var(--shiki-token-punctuation);">(</span><span style="color:var(--shiki-token-keyword);">function</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-constant);">NovaRequest</span><span style="color:var(--shiki-color-text);"> $request) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">return</span><span style="color:var(--shiki-color-text);"> $request</span><span style="color:var(--shiki-token-keyword);">-&gt;</span><span style="color:var(--shiki-token-function);">user</span><span style="color:var(--shiki-token-punctuation);">()</span><span style="color:var(--shiki-token-keyword);">-&gt;</span><span style="color:var(--shiki-token-function);">wantsBreadcrumbs</span><span style="color:var(--shiki-token-punctuation);">()</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">}</span><span style="color:var(--shiki-token-punctuation);">)</span><span style="color:var(--shiki-color-text);">;</span></span></code></pre></div><h3 id="enabling-rtl-support" tabindex="-1">Enabling RTL Support <a class="header-anchor" href="#enabling-rtl-support" aria-label="Permalink to &quot;Enabling RTL Support&quot;">​</a></h3><p>If you wish to display Nova&#39;s content &quot;right-to-left&quot; (RTL), you can enable this behavior by calling the <code>enableRTL</code> method from your <code>App\\Providers\\NovaServiceProvider</code> service provider:</p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-keyword);">use</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">Laravel</span><span style="color:var(--shiki-token-punctuation);">\\</span><span style="color:var(--shiki-token-constant);">Nova</span><span style="color:var(--shiki-token-punctuation);">\\</span><span style="color:var(--shiki-token-constant);">Nova</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-comment);">/**</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);"> * Boot any application services.</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);"> *</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);"> * </span><span style="color:var(--shiki-token-keyword);">@return</span><span style="color:var(--shiki-token-comment);"> </span><span style="color:var(--shiki-token-keyword);">void</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);"> */</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">function</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">boot</span><span style="color:var(--shiki-color-text);">()</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">{</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">parent::</span><span style="color:var(--shiki-token-function);">boot</span><span style="color:var(--shiki-token-punctuation);">()</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-constant);">Nova</span><span style="color:var(--shiki-token-keyword);">::</span><span style="color:var(--shiki-token-function);">enableRTL</span><span style="color:var(--shiki-token-punctuation);">()</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">}</span></span></code></pre></div><p>The <code>enableRTL</code> method also accept a closure that allows you to enable RTL support for specific users or in other custom scenarios:</p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-keyword);">use</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">Illuminate</span><span style="color:var(--shiki-token-punctuation);">\\</span><span style="color:var(--shiki-token-constant);">Http</span><span style="color:var(--shiki-token-punctuation);">\\</span><span style="color:var(--shiki-token-constant);">Request</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">use</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">Laravel</span><span style="color:var(--shiki-token-punctuation);">\\</span><span style="color:var(--shiki-token-constant);">Nova</span><span style="color:var(--shiki-token-punctuation);">\\</span><span style="color:var(--shiki-token-constant);">Nova</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-constant);">Nova</span><span style="color:var(--shiki-token-keyword);">::</span><span style="color:var(--shiki-token-function);">enableRTL</span><span style="color:var(--shiki-token-punctuation);">(</span><span style="color:var(--shiki-token-keyword);">fn</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-constant);">Request</span><span style="color:var(--shiki-color-text);"> $request) =&gt; $request</span><span style="color:var(--shiki-token-keyword);">-&gt;</span><span style="color:var(--shiki-token-function);">user</span><span style="color:var(--shiki-token-punctuation);">()</span><span style="color:var(--shiki-token-keyword);">-&gt;</span><span style="color:var(--shiki-token-function);">wantsRTL</span><span style="color:var(--shiki-token-punctuation);">())</span><span style="color:var(--shiki-color-text);">;</span></span></code></pre></div><h3 id="disabling-nova-s-theme-switcher" tabindex="-1">Disabling Nova&#39;s Theme Switcher <a class="header-anchor" href="#disabling-nova-s-theme-switcher" aria-label="Permalink to &quot;Disabling Nova&#39;s Theme Switcher&quot;">​</a></h3><p>If you wish to completely hide Nova&#39;s light/dark mode switcher and instead have Nova honor the system preference only, you can call the <code>withoutThemeSwitcher</code> method from your <code>App/Providers/NovaServiceProvider</code>:</p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-keyword);">use</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">Laravel</span><span style="color:var(--shiki-token-punctuation);">\\</span><span style="color:var(--shiki-token-constant);">Nova</span><span style="color:var(--shiki-token-punctuation);">\\</span><span style="color:var(--shiki-token-constant);">Nova</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-comment);">/**</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);"> * Boot any application services.</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);"> *</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);"> * </span><span style="color:var(--shiki-token-keyword);">@return</span><span style="color:var(--shiki-token-comment);"> </span><span style="color:var(--shiki-token-keyword);">void</span></span>
<span class="line"><span style="color:var(--shiki-token-comment);"> */</span></span>
<span class="line"><span style="color:var(--shiki-token-keyword);">public</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-keyword);">function</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-function);">boot</span><span style="color:var(--shiki-color-text);">()</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">{</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">parent::</span><span style="color:var(--shiki-token-function);">boot</span><span style="color:var(--shiki-token-punctuation);">()</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-constant);">Nova</span><span style="color:var(--shiki-token-keyword);">::</span><span style="color:var(--shiki-token-function);">withoutThemeSwitcher</span><span style="color:var(--shiki-token-punctuation);">()</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">}</span></span></code></pre></div><h2 id="error-reporting" tabindex="-1">Error Reporting <a class="header-anchor" href="#error-reporting" aria-label="Permalink to &quot;Error Reporting&quot;">​</a></h2><p>Nova uses its own internal exception handler instead of using the default <code>App\\Exceptions\\ExceptionHandler</code>. If you need to integrate third-party error reporting tools with your Nova installation, you should use the <code>Nova::report</code> method. Typically, this method should be invoked from the <code>register</code> method of your application&#39;s <code>App\\Providers\\NovaServiceProvider</code> class:</p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-keyword);">use</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-constant);">Laravel</span><span style="color:var(--shiki-token-punctuation);">\\</span><span style="color:var(--shiki-token-constant);">Nova</span><span style="color:var(--shiki-token-punctuation);">\\</span><span style="color:var(--shiki-token-constant);">Nova</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-token-constant);">Nova</span><span style="color:var(--shiki-token-keyword);">::</span><span style="color:var(--shiki-token-function);">report</span><span style="color:var(--shiki-token-punctuation);">(</span><span style="color:var(--shiki-token-keyword);">function</span><span style="color:var(--shiki-color-text);"> ($exception) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">if</span><span style="color:var(--shiki-color-text);"> (</span><span style="color:var(--shiki-token-function);">app</span><span style="color:var(--shiki-token-punctuation);">()</span><span style="color:var(--shiki-token-keyword);">-&gt;</span><span style="color:var(--shiki-token-function);">bound</span><span style="color:var(--shiki-token-punctuation);">(</span><span style="color:var(--shiki-token-string-expression);">&#39;sentry&#39;</span><span style="color:var(--shiki-token-punctuation);">)</span><span style="color:var(--shiki-color-text);">) {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-function);">app</span><span style="color:var(--shiki-token-punctuation);">(</span><span style="color:var(--shiki-token-string-expression);">&#39;sentry&#39;</span><span style="color:var(--shiki-token-punctuation);">)</span><span style="color:var(--shiki-token-keyword);">-&gt;</span><span style="color:var(--shiki-token-function);">captureException</span><span style="color:var(--shiki-token-punctuation);">(</span><span style="color:var(--shiki-color-text);">$exception</span><span style="color:var(--shiki-token-punctuation);">)</span><span style="color:var(--shiki-color-text);">;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    }</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">}</span><span style="color:var(--shiki-token-punctuation);">)</span><span style="color:var(--shiki-color-text);">;</span></span></code></pre></div><h2 id="updating-nova" tabindex="-1">Updating Nova <a class="header-anchor" href="#updating-nova" aria-label="Permalink to &quot;Updating Nova&quot;">​</a></h2><p>To update your Nova installation, you may run the <code>composer update</code> command:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-function);">composer</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string);">update</span></span></code></pre></div><h3 id="updating-nova-s-assets" tabindex="-1">Updating Nova&#39;s Assets <a class="header-anchor" href="#updating-nova-s-assets" aria-label="Permalink to &quot;Updating Nova&#39;s Assets&quot;">​</a></h3><p>After updating to a new Nova release, you should be sure to update Nova&#39;s JavaScript and CSS assets using the <code>nova:publish</code> Artisan command and clear any cached views using the <code>view:clear</code> Artisan command. This will ensure the newly-updated Nova version is using the latest versions of Nova&#39;s assets and views:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-function);">php</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string);">artisan</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string);">nova:publish</span></span>
<span class="line"><span style="color:var(--shiki-token-function);">php</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string);">artisan</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string);">view:clear</span></span></code></pre></div><p>The <code>nova:publish</code> command will re-publish Nova&#39;s public assets, configuration, views, and language files. This command will not overwrite any existing configuration, views, or language files. If you would like the command to overwrite existing files, you may use the <code>--force</code> flag when executing the command:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-function);">php</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string);">artisan</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string);">nova:publish</span><span style="color:var(--shiki-color-text);"> </span><span style="color:var(--shiki-token-string);">--force</span></span></code></pre></div><h3 id="keeping-nova-s-assets-updated" tabindex="-1">Keeping Nova&#39;s Assets Updated <a class="header-anchor" href="#keeping-nova-s-assets-updated" aria-label="Permalink to &quot;Keeping Nova&#39;s Assets Updated&quot;">​</a></h3><p>To ensure Nova&#39;s assets are updated when a new version is downloaded, you may add a Composer hook inside your project&#39;s <code>composer.json</code> file to automatically publish Nova&#39;s latest assets:</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki css-variables"><code><span class="line"><span style="color:var(--shiki-token-string-expression);">&quot;scripts&quot;</span><span style="color:var(--shiki-color-text);">: {</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    </span><span style="color:var(--shiki-token-keyword);">&quot;post-update-cmd&quot;</span><span style="color:var(--shiki-token-punctuation);">:</span><span style="color:var(--shiki-color-text);"> [</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">        </span><span style="color:var(--shiki-token-string-expression);">&quot;@php artisan nova:publish&quot;</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">    ]</span></span>
<span class="line"><span style="color:var(--shiki-color-text);">}</span></span></code></pre></div><h2 id="code-distribution" tabindex="-1">Code Distribution <a class="header-anchor" href="#code-distribution" aria-label="Permalink to &quot;Code Distribution&quot;">​</a></h2><p>Nova&#39;s license does not allow the public distribution of its source code. So, you may not build an application using Nova and distribute that application public via open source repository hosting platforms or any other code distribution platform.</p><p>If you would like to develop a third party package that augments Nova&#39;s functionality, you are free to do so. However, you may not distribute the Nova source code along with your package.</p>`,105),i=[t];function r(l,p,c,k,h,v){return o(),a("div",null,i)}const d=s(e,[["render",r]]);export{y as __pageData,d as default};
